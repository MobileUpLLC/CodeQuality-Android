apply plugin: 'maven-publish'
apply plugin: 'signing'

/**
 * Publish:
 * Fill local.properties according to template-for-local.properties
 * ./gradlew build
 * ./gradlew publish
 * ./gradlew closeAndReleaseRepository
 *
 * More info: https://getstream.io/blog/publishing-libraries-to-mavencentral-2021/
 */

ext {
    DESCRIPTION = 'Gradle plugin for integration with Gitlab Code Quality'
    GITHUB_USER = 'MobileUpLLC'
    GITHUB_PROJECT = 'CodeQuality-Android'
    LICENSE_NAME = 'MIT License'
    LICENSE_URL = "https://github.com/${GITHUB_USER}/${GITHUB_PROJECT}/blob/master/LICENSE"
    DEVELOPER_ID = 'MobileUp'
    DEVELOPER_NAME = 'MobileUp'
    DEVELOPER_EMAIL = 'dev@mobileup.ru'
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.kotlin.srcDirs
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('javadoc')
    from dokkaJavadoc.outputDirectory
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.secretKeyRingFile"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''
ext["sonatypeStagingProfileId"] = ''

File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    Properties p = new Properties()
    p.load(new FileInputStream(secretPropsFile))
    p.each { name, value ->
        ext[name] = value
    }
} else {
    ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')
    ext["signing.password"] = System.getenv('SIGNING_PASSWORD')
    ext["signing.secretKeyRingFile"] = System.getenv('SIGNING_SECRET_KEY_RING_FILE')
    ext["ossrhUsername"] = System.getenv('OSSRH_USERNAME')
    ext["ossrhPassword"] = System.getenv('OSSRH_PASSWORD')
    ext["sonatypeStagingProfileId"] = System.getenv('SONATYPE_STAGING_PROFILE_ID')
}

publishing {
    // afterEvaluate is necessary because java-gradle-plugin
    // creates its publications in an afterEvaluate callback
    afterEvaluate {
        publications {
            // Modify publications created by java-gradle-plugin

            pluginMaven {
                artifact sourcesJar
                artifact javadocJar
            }

            withType(MavenPublication) {
                pom {
                    name = project.name
                    description = DESCRIPTION
                    url = "https://github.com/${GITHUB_USER}/${GITHUB_PROJECT}"
                    licenses {
                        license {
                            name = LICENSE_NAME
                            url = LICENSE_URL
                        }
                    }
                    developers {
                        developer {
                            id = DEVELOPER_ID
                            name = DEVELOPER_NAME
                            email = DEVELOPER_EMAIL
                        }
                    }
                    scm {
                        connection = "scm:git:github.com/${GITHUB_USER}/${GITHUB_PROJECT}.git"
                        developerConnection = "scm:git:ssh://github.com/${GITHUB_USER}/${GITHUB_PROJECT}.git"
                        url = "https://github.com/${GITHUB_USER}/${GITHUB_PROJECT}/tree/main"
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "sonatype"
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

nexusStaging {
    stagingProfileId = sonatypeStagingProfileId
    username = ossrhUsername
    password = ossrhPassword
}

signing {
    sign publishing.publications
}